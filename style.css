* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    background-color: white;
    width: 70%;
    margin: 0 auto;
    color: white;
    position: relative;
}

h1 {
    font-size: 3.052rem;
}

.logo {
    font-size: 1.953rem;
}

header {
    padding: 15px 30px;
    background-color: #a6dfa6;
}

.search {
    background: url("/home/ryan/JavaScript/Odin/Library-Catalog/library_animated.jpg");
    background-size: cover;
    display: flex;
    flex-flow: wrap;
    justify-content: space-between;
    padding: 100px 0;
}

.book-log {
    background: rgba(0,0,0,.7);
    padding: 40px;
    margin: 30px;
    position: relative;

}

.book-log h3 {
    margin-bottom: 5px;
}

.book-log p {
    line-height: 1.25rem;
}


.search-box {
    background: rgba(0,0,0,.7);
    padding: 20px;
    margin: 60px 30px;
    flex: 0 1 500px;
}

.search-box > h3 {
    font-size: 1.563rem;
    margin-bottom: 7px;
}

.search-button {
    width: 80px;
    padding: 11px 0;
    vertical-align: top;
}

.display-key {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: minmax(65px, 1fr);
    background-color: lightgrey;
    margin-bottom: 50px;
    align-items: center;
    padding: 0 15px;
}

.key-container > p {
    font-size: 1.25rem;
}

.read-container, .unread-container {
    display: inline-block;
    width: 50px;
    height: 30px;
}

.read-container {
    background: linear-gradient(to right, #4c7a4c, #a6dfa6);
    border: solid;
    border-width: 1px;
}

.unread-container {
    background: linear-gradient(to right, #bababa, #969696);
    border: solid;
    border-width: 1px;
}

.display-tiles {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(370px, 1fr));
    grid-gap: 20px;

}

.display-tile {
    background-image: linear-gradient(to right,  #406840, #a6dfa6);
    padding: 40px 30px;
    border-radius: 5px;
    box-shadow: 7px 7px 7px -6px gray;
    position: relative;
}

.display-tile:hover {
    background-image: linear-gradient(to right, #404568, #a6d9df);
    box-shadow: 13px 13px 13px -6px gray;
    transition: all .1s ease;
}

.tile-heading {
    font-size: 1.953rem;
    margin-bottom: 20px;
}

.tile-field {
    font-size: 1.25rem;
    margin-bottom: 20px;
}

.read-status {
    display: flex;
    gap: 10px;
    justify-content: end;
    align-items: center;
    flex-flow: wrap;
}

.key-container {
    display: flex;
    gap: 10px;
    flex-flow: wrap;
    align-items: center;
}

input[type="search"] {
    width: 80%;
    height: 35px;
    font-size: 1.25rem;
    padding: 18px 15px;
}

select {
    padding: 5px;
    font-size: 1rem;
    vertical-align: top;
}

/*Button config below*/


.new-book {
    border: none;
    height: 50px;
    width: 50px;
    border-radius: 50%;
    position: fixed;
    bottom: 20px;
    right: 20px;
    z-index: 1000;
    outline: transparent;
    background: linear-gradient(135deg, #2196f3 0%, #1565c0 100%);
    color: #fff;
    box-shadow: 0px 3px 5px -1px rgb(0 0 0 / 20%), 0px 6px 10px 0px rgb(0 0 0 / 14%), 0px 1px 18px 0px rgb(0 0 0 / 12%);
}

.new-book:hover {
    transform: rotate(90deg) scale(1.2);
    cursor: pointer;
}

.new-book:active {
    filter: opacity(80%);
}

.new-book {
    transition: transform 0.25s, opacity 0.25s;
}

.new-book span {
    font-size: 2rem;
    line-height: 1.2;
    border-radius: 50%;
}

.remove-book {
    position: absolute;
    top: 14px;
    right: 14px;
}
.remove-book:hover {
    transform: rotate(90deg) scale(1.3);
    cursor: pointer;
}

.remove-book:active {
    filter: opacity(80%);
}

.remove-book {
    transition: transform 0.25s, opacity 0.25s;
}

.remove-book {
    font-size: 1.953rem;
    line-height: 1.2;
    border-radius: 50%;
}


.form-container {
    width: 100vw;
    height: 100vh;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 999;
    background-color: rgba(0, 0, 0, 0.5);
    /*backdrop-filter: blur(2px);*/
    display: flex;
    align-items: center;
}

form {
    color: black;
    margin-right: auto;
    margin-left: auto;
    width: max-content;
    max-width: 100vw;
    max-height: 100vh;
    display: flex;
    flex-direction: column;
    font-size: 1rem;
    text-align: start;
    padding: 50px;
    border: solid 1px #d3d3d3;
    border-radius: 5px;
    position: relative;
    background-color: #fff;
    /*overflow-y: scroll;*/

}

form input {
    padding: 7px;
    font-size: 1.25rem;
    width: 350px;

}

form label {
    display: inline-block;
    text-align: right;
    width: 80px
}

form > p {
    margin-bottom: 20px;
}

form > h2 {
    margin-bottom: 30px;
}

.form-header {
    text-align: center;
}

/*.form-key {*/
/*    text-align: right;*/
/*}*/

label {
    display: inline-block;
    text-align: center;
    font-size: 1.25rem;
    margin-right: 3px;
}

textarea {
    width: 350px;
    height: 75px;
    vertical-align: top;
}

.add-book {
    align-self: end;
    padding: 10px 30px;
    font-size: 1.563rem;
}


/* Radio Button */

ul {
    position: absolute;
    bottom: 15px;
    right: -20px;
}

input[type="checkbox"] {
    -webkit-appearance: none;
    appearance: none;
    width: 44px;
    height: 24px;
    border-radius: 12px;
    border: 2px solid black;
    background: #eee;
    transition: all 0.4s;
}

li {
    width: 100px;
    display: flex;
    align-items: center;
    justify-content: space-around;
    position: relative;
}

/*
   Size the label, and make the on and off parts sit on top
   of one another using positioning
*/

li label {
    width: 20px;
    height: 20px;
    line-height: 20px;
    position: relative;
}

li label span {
    position: absolute;
    right: 90px;
}

/*
   remove the default styling of the checkbox using appearance
   and create the outer toggle area
*/

input[type="checkbox"] {
    -webkit-appearance: none;
    appearance: none;
    width: 44px;
    height: 24px;
    border-radius: 12px;
    border: 2px solid black;
    background: #bcbcbc;
    transition: all 0.4s;
    border: none;
}

/*
   style the ::before content to look like
   the inner toggle switch - the bit that moves
*/

input[type="checkbox"]::before {
    width: 16px;
    height: 16px;
    border-radius: 9px;
    background-color: black;
    content: '';
    position: absolute;
    top: 4px;
    left: 14%;
    transition: all 0.4s;
}

/*
   change the outer background color and move the inner toggle switch
   when the checkbox is checked; use transitions for smooth animation
*/

input[type="checkbox"]:checked {
    background-color: #fbfbfb;
    transition: all 0.4s;
}

input[type="checkbox"]:checked::before {
    left: 32%;
    transition: all 0.4s;
}

/*
   cause the On and Off parts of the label to be visible when the checkbox is
   checked and unchecked, respectively
*/

input[type="checkbox"] ~ label .on, input[type="checkbox"]:checked ~ label .off {
    opacity: 0;
}

input[type="checkbox"] ~ label .off, input[type="checkbox"]:checked ~ label .on {
    opacity: 1;
}

/*
   make the focus outline a bit more subtle on Chrome, rather than the
   default heavy blue outline
*/



